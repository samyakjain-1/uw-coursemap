name: Data Generation
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:

#  generate:
#    name: Generate Data
#    runs-on: ubuntu-latest
#    defaults:
#      run:
#        working-directory: ./generation
#    permissions:
#      contents: read
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#          submodules: true
#      - uses: actions/setup-python@v5
#        with:
#          python-version: 3
#          cache: pipenv
#      - name: Install pipenv
#        run: python3 -m pip install --upgrade pip pipenv
#      - name: Install Dependencies
#        run: pipenv sync
#      - name: Setup Cache Environment
#        run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
#      - name: Cache Generation
#        uses: actions/cache@v4
#        with:
#          path: generation/.cache
#          key: generation-${{ runner.os }}-${{ env.cache_id }}
#      - name: Generate Data
#        run: pipenv run python main.py --step all
#        env:
#          DATA_DIR: "../data"
#          MADGRADES_API_KEY: ${{ secrets.MADGRADES_API_KEY }}
#      - name: Upload Data
#        uses: actions/upload-artifact@v4
#        with:
#          name: uw-coursemap-data-snapshot-${{ github.run_id }}
#          path: data/


  test-upload:
    name: Create & Upload Test Artifact
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Make a dummy JSON
        run: |
          mkdir snapshot
          echo '{"hello":"world"}' > snapshot/hello.json

      - name: Upload dummy snapshot
        uses: actions/upload-artifact@v4
        with:
          name: uw-coursemap-data-snapshot-${{ github.run_id }}
          path: snapshot/

  deployment:
    name: Deploy Data Snapshot
    needs: test-upload
    runs-on: ubuntu-latest
    permissions:
      contents: write
    environment:
      name: static-data
      url: ${{ env.DEPLOY_URL }}
    steps:
      - name: Checkout Deployment Repo
        uses: actions/checkout@v4
        with:
          repository: twangodev/uw-coursemap-data
          token: ${{ secrets.PAT }}
          path: deploy

      - name: Download Generated Snapshot
        uses: actions/download-artifact@v4
        with:
          name: uw-coursemap-data-snapshot-${{ github.run_id }}
          path: snapshot

      - name: Replace with Snapshot
        run: |
          cd deploy

          find . -maxdepth 1 \
            ! -name .git \
            ! -name . \
            -exec rm -rf {} +

          rsync -a ../snapshot/ .

          rm -rf ../snapshot

      - name: Auto-commit only selected filetypes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          repository: 'deploy'
          file_pattern: '*.json **/*.json'
          add_options: '--all'
          disable_globbing: true
          commit_message: "Deploy Snapshot #${{ github.run_id }}"
          branch: main
          push_options: '--force'

      
